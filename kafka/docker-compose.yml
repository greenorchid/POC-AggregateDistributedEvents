version: "3"

services:
  kafka:
    image: docker.io/bitnami/kafka:3.6
    ports:
      - "9092:9092"
      - "9094:9094"
    volumes:
      - "kafka_data:/bitnami"
    environment:
      - KAFKA_CFG_NODE_ID=0
      - KAFKA_CFG_PROCESS_ROLES=controller,broker
      - KAFKA_CFG_CONTROLLER_QUORUM_VOTERS=0@<your_host>:9093
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092,CONTROLLER://:9093,EXTERNAL://:9094
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://kafka:9092,EXTERNAL://localhost:9094
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CONTROLLER:PLAINTEXT,EXTERNAL:PLAINTEXT,PLAINTEXT:PLAINTEXT
      - KAFKA_CFG_CONTROLLER_LISTENER_NAMES=CONTROLLER
    healthcheck:
      test: kafka-cluster.sh cluster-id --bootstrap-server localhost:9092 || exit 1
      interval: 10s
      timeout: 5s
      retries: 10
      start_period: 30s
  
  kafka-ui:
    container_name: kafka-ui
    image: provectuslabs/kafka-ui:latest
    ports:
      - 8080:8080
    depends_on: &needs_kafka
      kafka:
        condition: service_healthy
    environment:
      KAFKA_CLUSTERS_0_NAME: local
      KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: kafka:9092

  event-generator:
    container_name: "event-generator" 
    build:
      context: ./EventGenerator
      dockerfile: ./Dockerfile
    environment: &kafka_env
      KAFKA_SERVER: kafka:9092
      FAUST_AGGREGATOR_PARTITIONS: 2
    depends_on: *needs_kafka

  event-aggregator-1: &event-aggregator
    container_name: "event-aggregator-1" 
    build:
      context: ./EventAggregator
      dockerfile: ./Dockerfile
    environment: *kafka_env
    depends_on: *needs_kafka
  
  event-aggregator-2: 
    <<: *event-aggregator
    container_name: "event-aggregator-2" 
    environment:
      <<: *kafka_env
      FAUST_WEB_PORT: 6067
  
volumes:
  kafka_data:
    driver: local